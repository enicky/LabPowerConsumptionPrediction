import "experimental"
 from(bucket: "home_assistant")
 |> range(start:"2024-08-19", stop: "2024-08-20")
 #|> range(start:experimental.subDuration(d: 24h, from: today()), stop: today())
 |> filter(fn: (r) => r["entity_id"] == "forecast_home_2" or r["entity_id"] == "warmtepomp_power" or r["entity_id"] == "smoke_detector_device_17_temperature")
 |> filter(fn: (r) =>  r["_field"] == "humidity" or r["_field"] == "pressure" or r["_field"] == "value")
 |> aggregateWindow(every: 1m, fn: mean, createEmpty: true)
 |> fill(usePrevious: true)
 |> keep(columns: ["_field", "_measurement", "_value", "_time"])
 |> pivot(
     rowKey: ["_time"], columnKey: ["_measurement", "_field"], valueColumn: "_value")
 |> yield(name: "values")